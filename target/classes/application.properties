# spring boot应用的配置
# spring boot的核心思想，将分散在各个xml中的乱七八糟的配置，全部集中到一个地方来
# 集中到application.properties中，便于我们来管理所有的配置项

# devtools支持代码同步到远程服务器的密码设置
# spring.devtools.remote.secret=123456

# 监听端口配置
server.port=9090
# web应用上下文路径配置
server.context-path=/springboot-demo
# 打开tomcat访问日志
# server.tomcat.accesslog.enabled=true
# 访问日志所在的目录
# server.tomcat.accesslog.directory=F:\\tomcat-logs

# mysql连接配置
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://localhost:3306/test?useUnicode=true&characterEncoding=utf-8
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driverClassName=com.mysql.jdbc.Driver

# 连接池的配置信息
spring.datasource.initialSize=5
spring.datasource.minIdle=5
spring.datasource.maxActive=20
spring.datasource.maxWait=60000
spring.datasource.timeBetweenEvictionRunsMillis=60000
spring.datasource.minEvictableIdleTimeMillis=300000
spring.datasource.validationQuery=SELECT 1 FROM DUAL
spring.datasource.testWhileIdle=true
spring.datasource.testOnBorrow=false
spring.datasource.testOnReturn=false
spring.datasource.poolPreparedStatements=true
spring.datasource.maxPoolPreparedStatementPerConnectionSize=20
spring.datasource.filters=stat,wall,log4j
spring.datasource.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000

# 自定义的配置
# my.conf=true

# 日志级别
# 配置打印日志的默认最小级别
# logging.level.root=info
# 配置org包下打印日志的最小级别是WARN
# org包下的一般都是第三方的组件，不需要打印info级别的日志
# logging.level.org=warn
# 自己包下的日志，从debug级别就开始打印
# logging.level.com.zhss=debug

# 日志文件
#同时默认仅仅在控制台打印日志，如果要打印日志到文件，需要进行配置
## 这是相对路径，放在应用的目录下
#logging.file=my.log
## 当然一般其实是将日志文件放在指定的某个日志目录中的
# 设置日志打印所在的目录，这就会在/usr/local目录下生成一个spring.log日志文件
# logging.path=/Users/liuguangfu/Desktop
## 这就会在/var/logs/com.zhss.springboot.demo目录下生成一个spring.log日志文件
#logging.path=/var/logs/com.zhss.springboot.demo
#当日志达到10MB的时候，就会重新生成一个日志文件，避免单个日志文件过大
